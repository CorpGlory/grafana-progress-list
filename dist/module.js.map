{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./directives/multibar_progress.ts","webpack:///./directives/progress.ts","webpack:///./graph_tooltip.ts","webpack:///./mapper.ts","webpack:///./module.ts","webpack:///./panel-config.ts","webpack:///./value_formatter.ts","webpack:///external \"app/core/core\"","webpack:///external \"app/plugins/sdk\"","webpack:///external \"lodash\""],"names":["Object","defineProperty","exports","value","core_1","require","directiveInited","initMultibarProgress","panelConfig","directiveName","coreModule","directive","templateUrl","pluginDirName","restrict","scope","item","onHover","onMouseLeave","initProgress","_","TooltipMode","GraphTooltip","getSeriesFn","items","tooltipMode","_visible","$tooltip","$","detach","pos","index","title","seriesList","length","undefined","showTitle","_renderAndShow","_convertTitleAndValueToHtml","currentValues","ALL_SERIES","map","serie","idx","_convertSerieToHtml","filter","join","remove","innerHtml","html","place_tt","pageX","pageY","isBold","alias","target","currentFormattedValue","value_formatter_1","module_1","StatType","MultiProgressItem","_panelConfig","_title","_keys","_values","_maxValue","Error","sum","values","Math","floor","sumOfValues","getFormattedValue","getValue","titleType","TitleViewOptions","SEPARATE_TITLE_LINE","barHeight","titleTopMargin","valueTopMargin","INLINE","ProgressItem","key","aggregatedValue","maxAggregatedValue","currentValue","currentMaxValue","_key","_aggregatedValue","_maxAggregatedValue","_currentValue","_currentMaxValue","currentProgress","aggregatedProgress","colorType","thresholdsStr","colors","thresholds","split","parseFloat","i","colorKeyMappings","keyColorMapping","find","k","color","Mapper","templateSrv","_templateSrv","statType","mappingType","statProgressType","statProgressMaxValue","nullMapping","kstat","currentStat","columns","keys","col","text","keyColumn","keyIndex","findIndex","skipIndexes","skipColumn","push","maxValue","max","rows","row","includes","filteredKeys","console","log","TOTAL","_mapKeysTotal","_mapNumeric","CURRENT","_mapTargetToDatapoints","_getMaxValue","forEach","scopedVars","__key","replace","total","Infinity","kv","datapointsLength","datapoints","toString","res","v","vn","isNaN","_flatSeries","datapoint","MAX","MIN","min","last","graph_tooltip_1","panel_config_1","mapper_1","progress_1","multibar_progress_1","sdk_1","DEFAULTS","multibar","statNameOptionValue","coloringType","titleViewType","sortingOrder","valueLabelType","prefix","postfix","colorsKeyMappingDefault","opacity","Ctrl","$scope","$injector","statNameOptions","statProgressTypeOptions","coloringTypeOptions","titleViewTypeOptions","sortingOrderOptions","valueLabelTypeOptions","mappingTypeOptions","tooltipModeOptions","defaults","panel","PanelConfig","_initStyles","mapper","events","on","_onInitEditMode","bind","_onDataReceived","_onRender","element","_element","cssPath","loadPluginCss","light","dark","mapMetricData","_seriesList","sortBy","css","height","_tooltip","destroy","event","show","originalEvent","clear","render","thisPartialPath","addEditorTab","tmp","splice","err","data","dataError","isMultibar","MetricsPanelCtrl","PanelCtrl","_panel","_pluginDirName","panels","window","settings","thisPanel","type","baseUrl","decimals","getFormattedFloat","dm","getDecimalsForValue","round","fv","fvs","substr","isNumber","scaledDecimals","delta","dec","LN10","magn","pow","norm","size","result"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./module.ts\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"grafana/app/core/core\");\nvar directiveInited = false;\nfunction initMultibarProgress(panelConfig, directiveName = 'multibar_progress') {\n    if (directiveInited) {\n        return;\n    }\n    directiveInited = true;\n    core_1.coreModule\n        .directive(directiveName, function () {\n        return {\n            templateUrl: panelConfig.pluginDirName + 'directives/multibar_progress.html',\n            restrict: 'E',\n            scope: {\n                item: '=',\n                onHover: '&',\n                onMouseLeave: '&'\n            }\n        };\n    });\n}\nexports.initMultibarProgress = initMultibarProgress;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"grafana/app/core/core\");\nvar directiveInited = false;\nfunction initProgress(panelConfig, directiveName = 'progress') {\n    if (directiveInited) {\n        return;\n    }\n    directiveInited = true;\n    core_1.coreModule\n        .directive(directiveName, function () {\n        return {\n            templateUrl: panelConfig.pluginDirName + 'directives/progress.html',\n            restrict: 'E',\n            scope: {\n                item: '=',\n                onHover: '&',\n                onMouseLeave: '&'\n            }\n        };\n    });\n}\nexports.initProgress = initProgress;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nvar TooltipMode;\n(function (TooltipMode) {\n    TooltipMode[\"SINGLE\"] = \"single\";\n    TooltipMode[\"ALL_SERIES\"] = \"all series\";\n})(TooltipMode = exports.TooltipMode || (exports.TooltipMode = {}));\n;\nclass GraphTooltip {\n    constructor(getSeriesFn, items, tooltipMode) {\n        this.getSeriesFn = getSeriesFn;\n        this.items = items;\n        this.tooltipMode = tooltipMode;\n        this._visible = false;\n        this.$tooltip = $('<div class=\"graph-tooltip\">');\n    }\n    clear() {\n        this._visible = false;\n        this.$tooltip.detach();\n    }\n    show(pos, index, title, value) {\n        this._visible = true;\n        const seriesList = this.getSeriesFn();\n        if (seriesList.length === 0) {\n            return;\n        }\n        if (title !== undefined && value !== undefined) {\n            const showTitle = false;\n            this._renderAndShow(this._convertTitleAndValueToHtml(title, value), pos, showTitle);\n            return;\n        }\n        let currentValues = [];\n        if (this.tooltipMode === TooltipMode.ALL_SERIES) {\n            currentValues = _.map(seriesList, (serie, idx) => this._convertSerieToHtml(serie, this.items[idx], index === idx)).filter(value => value !== undefined);\n        }\n        else {\n            currentValues = [this._convertSerieToHtml(seriesList[index], this.items[index], true)];\n        }\n        this._renderAndShow(currentValues.join('\\n'), pos);\n    }\n    destroy() {\n        this._visible = false;\n        this.$tooltip.remove();\n    }\n    get visible() { return this._visible; }\n    _renderAndShow(innerHtml, pos, showTitle = true) {\n        const title = showTitle ? `<div class=\"graph-tooltip-time\">Current value</div>` : '';\n        // TODO: move this \"20\" to a constant\n        // TODO: check how this work when `pos` is close to the page bottom edge\n        this.$tooltip.html(title + innerHtml).place_tt(pos.pageX + 20, pos.pageY);\n    }\n    _convertSerieToHtml(serie, item, isBold) {\n        return `\n      <div class=\"graph-tooltip-list-item\">\n        <div class=\"graph-tooltip-series-name\">\n          ${isBold ? '<b>' : ''} ${serie.alias || serie.target} ${isBold ? '</b>' : ''}\n        </div>\n        <div class=\"graph-tooltip-value\">${item.currentFormattedValue}</div>\n      </div>\n    `;\n    }\n    _convertTitleAndValueToHtml(title, value) {\n        return `\n      <div class=\"graph-tooltip-list-item\">\n        <div class=\"graph-tooltip-series-name\">\n          <b>${title}</b>\n        </div>\n        <div class=\"graph-tooltip-value\">${value}</div>\n      </div>\n    `;\n    }\n}\nexports.GraphTooltip = GraphTooltip;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst value_formatter_1 = require(\"./value_formatter\");\nconst module_1 = require(\"./module\");\nconst _ = require(\"lodash\");\nvar StatType;\n(function (StatType) {\n    StatType[\"CURRENT\"] = \"current\";\n    StatType[\"MIN\"] = \"min\";\n    StatType[\"MAX\"] = \"max\";\n    StatType[\"TOTAL\"] = \"total\";\n})(StatType = exports.StatType || (exports.StatType = {}));\n;\nclass MultiProgressItem {\n    constructor(_panelConfig, _title, _keys, _values, _maxValue) {\n        this._panelConfig = _panelConfig;\n        this._title = _title;\n        this._keys = _keys;\n        this._values = _values;\n        this._maxValue = _maxValue;\n        if (this._keys.length !== this._values.length) {\n            throw new Error('keys amount should be equal to values amount');\n        }\n    }\n    get title() {\n        return this._title;\n    }\n    get keys() {\n        return this._keys;\n    }\n    get values() {\n        return this._values;\n    }\n    get sumOfValues() {\n        return _.sum(this.values);\n    }\n    get percentValues() {\n        // TODO: this.sumOfValues * 1.1 is a hack to make sure bars don't wrap\n        // (they are wrapped when total width > 98%)\n        return this.values.map(value => Math.floor(value / (this.sumOfValues * 1.1) * 100));\n    }\n    get colors() {\n        // TODO: customize colors\n        return ['green', 'yellow', 'red'];\n    }\n    get aggregatedProgress() {\n        return (_.sum(this.values) / this._maxValue) * 100;\n    }\n    get formattedValue() {\n        return value_formatter_1.getFormattedValue(this.sumOfValues, this._panelConfig.getValue('prefix'), this._panelConfig.getValue('postfix'), this._panelConfig.getValue('decimals'));\n    }\n    get titleParams() {\n        const titleType = this._panelConfig.getValue('titleViewType');\n        switch (titleType) {\n            case module_1.TitleViewOptions.SEPARATE_TITLE_LINE:\n                return {\n                    barHeight: 8,\n                    titleTopMargin: 0,\n                    valueTopMargin: -12\n                };\n            case module_1.TitleViewOptions.INLINE:\n                return {\n                    barHeight: 20,\n                    titleTopMargin: -20,\n                    valueTopMargin: -18\n                };\n            default:\n                throw new Error(`Wrong titleType: ${titleType}`);\n        }\n    }\n    get opacity() {\n        return this._panelConfig.getValue('opacity');\n    }\n}\nexports.MultiProgressItem = MultiProgressItem;\nclass ProgressItem {\n    constructor(panelConfig, key, aggregatedValue, maxAggregatedValue, currentValue, currentMaxValue) {\n        this._panelConfig = panelConfig;\n        this._key = key;\n        this._aggregatedValue = aggregatedValue;\n        this._maxAggregatedValue = maxAggregatedValue;\n        // TODO: currentValue and currentMaxValue is not the best idea\n        this._currentValue = currentValue;\n        this._currentMaxValue = currentMaxValue;\n    }\n    get title() {\n        return this._key;\n    }\n    get aggregatedProgress() {\n        return 100 * this._aggregatedValue / this._maxAggregatedValue;\n    }\n    get currentProgress() {\n        return 100 * this._currentValue / this._currentMaxValue;\n    }\n    get maxValue() {\n        return this._maxAggregatedValue;\n    }\n    get aggregatedValue() {\n        return this._aggregatedValue;\n    }\n    get currentValue() {\n        return this._currentValue;\n    }\n    get currentFormattedValue() {\n        const value = this._panelConfig.getValue('valueLabelType') === 'percentage' ?\n            this.currentProgress :\n            this._currentValue;\n        return value_formatter_1.getFormattedValue(value, this._panelConfig.getValue('prefix'), this._panelConfig.getValue('postfix'), this._panelConfig.getValue('decimals'));\n    }\n    get formattedValue() {\n        const value = this._panelConfig.getValue('valueLabelType') === 'percentage' ?\n            this.aggregatedProgress :\n            this._aggregatedValue;\n        return value_formatter_1.getFormattedValue(value, this._panelConfig.getValue('prefix'), this._panelConfig.getValue('postfix'), this._panelConfig.getValue('decimals'));\n    }\n    get opacity() {\n        return this._panelConfig.getValue('opacity');\n    }\n    get color() {\n        var colorType = this._panelConfig.getValue('coloringType');\n        if (colorType === 'auto') {\n            return 'auto';\n        }\n        if (colorType === 'thresholds') {\n            var thresholdsStr = this._panelConfig.getValue('thresholds');\n            var colors = this._panelConfig.getValue('colors');\n            var value = this.aggregatedProgress;\n            if (thresholdsStr === undefined) {\n                return colors[0];\n            }\n            var thresholds = thresholdsStr.split(',').map(parseFloat);\n            for (var i = thresholds.length; i > 0; i--) {\n                if (value >= thresholds[i - 1]) {\n                    return colors[i];\n                }\n            }\n            return colors[0];\n        }\n        if (colorType === 'key mapping') {\n            var colorKeyMappings = this._panelConfig.getValue('colorKeyMappings');\n            var keyColorMapping = _.find(colorKeyMappings, k => k.key === this._key);\n            if (keyColorMapping === undefined) {\n                return this._panelConfig.getValue('colorsKeyMappingDefault');\n            }\n            return keyColorMapping.color;\n        }\n        throw new Error('Unknown color type ' + colorType);\n    }\n    get titleParams() {\n        const titleType = this._panelConfig.getValue('titleViewType');\n        switch (titleType) {\n            case module_1.TitleViewOptions.SEPARATE_TITLE_LINE:\n                return {\n                    barHeight: 8,\n                    titleTopMargin: 0,\n                    valueTopMargin: -22\n                };\n            case module_1.TitleViewOptions.INLINE:\n                return {\n                    barHeight: 20,\n                    titleTopMargin: -20,\n                    valueTopMargin: -18\n                };\n            default:\n                throw new Error(`Wrong titleType: ${titleType}`);\n        }\n    }\n}\nexports.ProgressItem = ProgressItem;\nclass Mapper {\n    constructor(panelConfig, templateSrv) {\n        this._panelConfig = panelConfig;\n        this._templateSrv = templateSrv;\n    }\n    mapMetricData(seriesList) {\n        const statType = this._panelConfig.getValue('statNameOptionValue');\n        const mappingType = this._panelConfig.getValue('mappingType');\n        const statProgressType = this._panelConfig.getValue('statProgressType');\n        const statProgressMaxValue = this._panelConfig.getValue('statProgressMaxValue');\n        const alias = this._panelConfig.getValue('alias');\n        const nullMapping = this._panelConfig.getValue('nullMapping');\n        if (seriesList === undefined || seriesList.length == 0) {\n            return [];\n        }\n        let kstat = [];\n        let currentStat = [];\n        if (seriesList[0].columns !== undefined) {\n            let keys = seriesList[0].columns.map(col => col.text);\n            const keyColumn = this._panelConfig.getValue('keyColumn');\n            let keyIndex = 0;\n            if (keyColumn !== '') {\n                keyIndex = keys.findIndex(key => key === keyColumn);\n            }\n            const title = keys[keyIndex];\n            let skipIndexes = [keyIndex];\n            const skipColumn = this._panelConfig.getValue('skipColumn');\n            if (skipColumn !== '') {\n                skipIndexes.push(keys.findIndex(key => key === skipColumn));\n            }\n            const maxValue = _.max(seriesList[0].rows.map(row => _.sum(row.filter((value, idx) => !_.includes(skipIndexes, idx)))));\n            const filteredKeys = keys.filter((key, idx) => !_.includes(skipIndexes, idx));\n            console.log(seriesList[0].rows);\n            return seriesList[0].rows.map(row => new MultiProgressItem(this._panelConfig, row[keyIndex], filteredKeys, row.filter((value, idx) => !_.includes(skipIndexes, idx)), maxValue));\n        }\n        if (mappingType === 'datapoint to datapoint') {\n            if (statType === StatType.TOTAL && seriesList.length == 1) {\n                kstat = this._mapKeysTotal(seriesList);\n            }\n            else {\n                kstat = this._mapNumeric(seriesList, statType, nullMapping);\n            }\n            currentStat = this._mapNumeric(seriesList, StatType.CURRENT, nullMapping);\n        }\n        else {\n            kstat = this._mapTargetToDatapoints(seriesList, statType);\n            currentStat = this._mapTargetToDatapoints(seriesList, StatType.CURRENT);\n        }\n        const maxValue = this._getMaxValue(kstat, statProgressType, statProgressMaxValue);\n        const currentMaxValue = this._getMaxValue(currentStat, statProgressType, statProgressMaxValue);\n        if (alias !== '') {\n            kstat.forEach(k => {\n                const scopedVars = {\n                    __key: { value: k[0] }\n                };\n                k[0] = this._templateSrv.replace(alias, scopedVars);\n            });\n        }\n        return _.map(kstat, (k, idx) => new ProgressItem(this._panelConfig, k[0], k[1], maxValue, currentStat[idx][1], currentMaxValue));\n    }\n    // TODO: enum statProgressType\n    _getMaxValue(kstat, statProgressType, statProgressMaxValue) {\n        if (statProgressType === 'shared') {\n            let total = 0;\n            for (let i = 0; i < kstat.length; i++) {\n                total += kstat[i][1];\n            }\n            return total;\n        }\n        if (statProgressType === 'max value') {\n            let max = -Infinity;\n            if (statProgressMaxValue !== null) {\n                max = statProgressMaxValue;\n            }\n            else {\n                for (let i = 0; i < kstat.length; i++) {\n                    max = Math.max(kstat[i][1], max);\n                }\n            }\n            return max;\n        }\n        return -1;\n    }\n    _mapKeysTotal(seriesList) {\n        if (seriesList.length !== 1) {\n            throw new Error('Expecting list of keys: got more than one timeseries');\n        }\n        var kv = {};\n        var datapointsLength = seriesList[0].datapoints.length;\n        for (let i = 0; i < datapointsLength; i++) {\n            let k = seriesList[0].datapoints[i][0].toString();\n            if (kv[k] === undefined) {\n                kv[k] = 0;\n            }\n            kv[k]++;\n        }\n        var res = [];\n        for (let k in kv) {\n            res.push([k, kv[k]]);\n        }\n        return res;\n    }\n    _mapNumeric(seriesList, statType, nullMapping) {\n        if (seriesList.length != 2) {\n            throw new Error('Expecting timeseries in format (key, value). You can use keys only in total mode');\n        }\n        if (seriesList[0].datapoints.length !== seriesList[1].datapoints.length) {\n            throw new Error('Timeseries has different length');\n        }\n        var kv = {};\n        var datapointsLength = seriesList[0].datapoints.length;\n        for (let i = 0; i < datapointsLength; i++) {\n            let k = seriesList[0].datapoints[i][0].toString();\n            let v = seriesList[1].datapoints[i][0];\n            let vn = parseFloat(v);\n            if (v === null) {\n                if (nullMapping === undefined || nullMapping === null) {\n                    throw new Error('Got null value. You set null value mapping in Options -> Mapping -> Null');\n                }\n                console.log('nullMapping ->' + nullMapping);\n                vn = nullMapping;\n            }\n            if (isNaN(vn)) {\n                throw new Error('Got non-numberic value: ' + v);\n            }\n            if (kv[k] === undefined) {\n                kv[k] = [];\n            }\n            kv[k].push(vn);\n        }\n        var res = [];\n        for (let k in kv) {\n            res.push([k, this._flatSeries(kv[k], statType)]);\n        }\n        return res;\n    }\n    _mapTargetToDatapoints(seriesList, statType) {\n        return seriesList.map(serie => [\n            serie.target,\n            this._flatSeries(serie.datapoints.map(datapoint => datapoint[0]), statType)\n        ]);\n    }\n    _flatSeries(values, statType) {\n        if (values.length === 0) {\n            return 0;\n        }\n        if (statType === StatType.TOTAL) {\n            return _.sum(values);\n        }\n        if (statType === StatType.MAX) {\n            return _.max(values);\n        }\n        if (statType === StatType.MIN) {\n            return _.min(values);\n        }\n        if (statType === StatType.CURRENT) {\n            return _.last(values);\n        }\n        return 0;\n    }\n}\nexports.Mapper = Mapper;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst graph_tooltip_1 = require(\"./graph_tooltip\");\nconst panel_config_1 = require(\"./panel-config\");\nconst mapper_1 = require(\"./mapper\");\nconst progress_1 = require(\"./directives/progress\");\nconst multibar_progress_1 = require(\"./directives/multibar_progress\");\nconst sdk_1 = require(\"grafana/app/plugins/sdk\");\nconst _ = require(\"lodash\");\nvar TitleViewOptions;\n(function (TitleViewOptions) {\n    TitleViewOptions[\"SEPARATE_TITLE_LINE\"] = \"Separate title line\";\n    TitleViewOptions[\"INLINE\"] = \"Inline\";\n})(TitleViewOptions = exports.TitleViewOptions || (exports.TitleViewOptions = {}));\n;\nconst DEFAULTS = {\n    multibar: false,\n    keyColumn: '',\n    // TODO: skip multiple columns\n    skipColumn: '',\n    statNameOptionValue: mapper_1.StatType.CURRENT,\n    statProgressType: 'shared',\n    statProgressMaxValue: null,\n    coloringType: 'auto',\n    titleViewType: TitleViewOptions.SEPARATE_TITLE_LINE,\n    sortingOrder: 'none',\n    valueLabelType: 'percentage',\n    mappingType: 'datapoint to datapoint',\n    alias: '',\n    prefix: '',\n    postfix: '',\n    thresholds: '10, 30',\n    // https://github.com/grafana/grafana/blob/v4.1.1/public/app/plugins/panel/singlestat/module.ts#L57\n    colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n    colorsKeyMappingDefault: 'rgba(245, 54, 54, 0.9)',\n    colorKeyMappings: [],\n    nullMapping: undefined,\n    tooltipMode: graph_tooltip_1.TooltipMode.ALL_SERIES,\n    opacity: 0.5\n};\nclass Ctrl extends sdk_1.MetricsPanelCtrl {\n    constructor($scope, $injector, templateSrv) {\n        super($scope, $injector);\n        this.templateSrv = templateSrv;\n        this.statNameOptions = _.values(mapper_1.StatType);\n        this.statProgressTypeOptions = ['max value', 'shared'];\n        this.coloringTypeOptions = ['auto', 'thresholds', 'key mapping'];\n        this.titleViewTypeOptions = _.values(TitleViewOptions);\n        this.sortingOrderOptions = ['none', 'increasing', 'decreasing'];\n        this.valueLabelTypeOptions = ['absolute', 'percentage'];\n        // TODO: change option names or add a tip in editor\n        this.mappingTypeOptions = ['datapoint to datapoint', 'target to datapoint'];\n        this.tooltipModeOptions = _.values(graph_tooltip_1.TooltipMode);\n        _.defaults(this.panel, DEFAULTS);\n        this._panelConfig = new panel_config_1.PanelConfig(this.panel);\n        this._initStyles();\n        progress_1.initProgress(this._panelConfig, 'progressListPluginProgress');\n        multibar_progress_1.initMultibarProgress(this._panelConfig, 'progressListPluginMultibarProgress');\n        this.mapper = new mapper_1.Mapper(this._panelConfig, this.templateSrv);\n        this.items = [];\n        this.events.on('init-edit-mode', this._onInitEditMode.bind(this));\n        this.events.on('data-received', this._onDataReceived.bind(this));\n        this.events.on('render', this._onRender.bind(this));\n    }\n    link(scope, element) {\n        this._element = element;\n    }\n    _initStyles() {\n        // small hack to load base styles\n        const cssPath = this._panelConfig.pluginDirName.replace('public/', '');\n        sdk_1.loadPluginCss({\n            light: cssPath + 'css/panel.base.css',\n            dark: cssPath + 'css/panel.base.css'\n        });\n        sdk_1.loadPluginCss({\n            light: cssPath + 'css/panel.light.css',\n            dark: cssPath + 'css/panel.dark.css'\n        });\n    }\n    _onRender() {\n        let items = this.mapper.mapMetricData(this._seriesList);\n        if (this._panelConfig.getValue('sortingOrder') === 'increasing') {\n            items = _.sortBy(items, i => i.aggregatedProgress);\n        }\n        if (this._panelConfig.getValue('sortingOrder') === 'decreasing') {\n            items = _.sortBy(items, i => -i.aggregatedProgress);\n        }\n        this.$scope.items = items;\n        this._element.find('.table-panel-scroll').css({\n            'height': `${this.height}px`,\n            'max-height': `${this.height}px`\n        });\n        if (this._tooltip !== undefined) {\n            this._tooltip.destroy();\n        }\n        this._tooltip = new graph_tooltip_1.GraphTooltip(() => this._seriesList, items, this.panel.tooltipMode);\n    }\n    onHover(index, event, title, value) {\n        this._tooltip.show(event.originalEvent, index, title, value);\n    }\n    onMouseLeave() {\n        this._tooltip.clear();\n    }\n    _onDataReceived(seriesList) {\n        this._seriesList = seriesList;\n        this.render();\n    }\n    _onInitEditMode() {\n        var thisPartialPath = this._panelConfig.pluginDirName + 'partials/';\n        this.addEditorTab('Options', thisPartialPath + 'options.html', 2);\n    }\n    invertColorOrder() {\n        var tmp = this.panel.colors[0];\n        this.panel.colors[0] = this.panel.colors[2];\n        this.panel.colors[2] = tmp;\n        this.render();\n    }\n    addColorKeyMapping() {\n        this.panel.colorKeyMappings.push({\n            key: 'KEY_NAME',\n            color: 'rgba(50, 172, 45, 0.97)'\n        });\n    }\n    removeColorKeyMapping(index) {\n        this.panel.colorKeyMappings.splice(index, 1);\n        this.render();\n    }\n    _dataError(err) {\n        this.$scope.data = [];\n        this.$scope.dataError = err;\n    }\n    get columns() {\n        if (this._seriesList === undefined ||\n            this._seriesList.length === 0 ||\n            this._seriesList[0].columns === undefined) {\n            return [];\n        }\n        return this._seriesList[0].columns.map(col => col.text);\n    }\n    get isMultibar() {\n        return this.panel.multibar;\n    }\n    set isMultibar(isMultibar) {\n        this.panel.multibar = isMultibar;\n    }\n}\nCtrl.templateUrl = 'partials/template.html';\nexports.PanelCtrl = Ctrl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PanelConfig {\n    constructor(panel) {\n        this._panel = panel;\n    }\n    getValue(key) {\n        return this._panel[key];\n    }\n    setValue(key, value) {\n        this._panel[key] = value;\n    }\n    get pluginDirName() {\n        if (!this._pluginDirName) {\n            var panels = window['grafanaBootData'].settings.panels;\n            var thisPanel = panels[this._panel.type];\n            // the system loader preprends publib to the url,\n            // add a .. to go back one level\n            this._pluginDirName = thisPanel.baseUrl + '/';\n        }\n        return this._pluginDirName;\n    }\n}\nexports.PanelConfig = PanelConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nfunction getFormattedValue(value, prefix, postfix, decimals) {\n    return `${prefix}${getFormattedFloat(value, decimals)}${postfix}`;\n}\nexports.getFormattedValue = getFormattedValue;\nfunction getFormattedFloat(value, decimals) {\n    let dm = getDecimalsForValue(value, decimals).decimals;\n    if (dm === 0) {\n        return Math.round(value).toString();\n    }\n    let fv = value;\n    for (let i = 0; i < dm; i++) {\n        fv *= 10;\n    }\n    ;\n    let fvs = Math.round(fv).toString();\n    return fvs.substr(0, fvs.length - dm) + '.' + fvs.substr(fvs.length - dm);\n}\nfunction getDecimalsForValue(value, decimals) {\n    // based on https://github.com/grafana/grafana/blob/v4.1.1/public/app/plugins/panel/singlestat/module.ts\n    if (_.isNumber(decimals)) {\n        return {\n            decimals,\n            scaledDecimals: null\n        };\n    }\n    let delta = value / 2;\n    let dec = -Math.floor(Math.log(delta) / Math.LN10);\n    let magn = Math.pow(10, -dec), norm = delta / magn, // norm is between 1.0 and 10.0\n    size;\n    if (norm < 1.5) {\n        size = 1;\n    }\n    else if (norm < 3) {\n        size = 2;\n        // special case for 2.5, requires an extra decimal\n        if (norm > 2.25) {\n            size = 2.5;\n            ++dec;\n        }\n    }\n    else if (norm < 7.5) {\n        size = 5;\n    }\n    else {\n        size = 10;\n    }\n    size *= magn;\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) {\n        dec = 0;\n    }\n    let result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n    return result;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_core_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_plugins_sdk__;","module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;"],"sourceRoot":""}