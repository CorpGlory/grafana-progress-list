{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./directives/progress.ts","webpack:///./mapper.ts","webpack:///./module.ts","webpack:///./panel-config.ts","webpack:///external \"app/core/core\"","webpack:///external \"app/plugins/sdk\"","webpack:///external \"lodash\""],"names":["Object","defineProperty","exports","value","core_1","require","directiveInited","initProgress","panelConfig","directiveName","coreModule","directive","templateUrl","pluginDirName","restrict","scope","item","_","ProgressItem","key","maxValue","_panelConfig","_key","_value","_maxValue","getValue","progress","dm","_getDecimalsForValue","decimals","Math","round","toString","fv","i","fvs","substr","length","isNumber","scaledDecimals","delta","dec","floor","log","LN10","magn","pow","norm","size","result","max","res","_getFormattedFloat","colorType","thresholdsStr","colors","undefined","thresholds","split","map","parseFloat","colorKeyMappings","keyColorMapping","find","k","color","Error","Mapper","templateSrv","_templateSrv","seriesList","kstat","_mapKeysTotal","_mapNumeric","_mapTargetToDatapoints","total","Infinity","alias","forEach","scopedVars","replace","kv","datapointsLength","datapoints","push","nullMapping","v","vn","console","isNaN","_flatSeries","serie","target","datapoint","values","t","sum","min","panel_config_1","mapper_1","progress_1","sdk_1","DEFAULTS","statNameOptionValue","statProgressType","statProgressMaxValue","coloringType","sortingOrder","valueLabelType","mappingType","prefix","postfix","colorsKeyMappingDefault","Ctrl","$scope","$injector","statNameOptions","statProgressTypeOptions","coloringTypeOptions","sortingOrderOptions","valueLabelTypeOptions","mappingTypeOptions","defaults","panel","PanelConfig","_initStyles","mapper","items","events","on","_onInitEditMode","bind","_onDataReceived","_onRender","element","_element","cssPath","loadPluginCss","light","dark","mapMetricData","_seriesList","sortBy","css","height","render","thisPartialPath","addEditorTab","tmp","index","splice","err","data","dataError","MetricsPanelCtrl","PanelCtrl","_panel","_pluginDirName","panels","window","settings","thisPanel","type","baseUrl"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./module.ts\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"grafana/app/core/core\");\nvar directiveInited = false;\nfunction initProgress(panelConfig, directiveName = \"progress\") {\n    if (directiveInited) {\n        return;\n    }\n    directiveInited = true;\n    core_1.coreModule\n        .directive(directiveName, function () {\n        return {\n            templateUrl: panelConfig.pluginDirName + 'directives/progress.html',\n            restrict: 'E',\n            scope: {\n                item: \"=\"\n            }\n        };\n    });\n}\nexports.initProgress = initProgress;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nclass ProgressItem {\n    constructor(panelConfig, key, value, maxValue) {\n        this._panelConfig = panelConfig;\n        this._key = key;\n        this._value = value;\n        this._maxValue = maxValue;\n    }\n    get title() {\n        return this._key;\n    }\n    get progress() {\n        return 100 * this._value / this._maxValue;\n    }\n    get value() {\n        return this._value;\n    }\n    get formattedValue() {\n        var value = this._value;\n        var res = this._panelConfig.getValue('prefix');\n        res += this._getFormattedFloat();\n        res += this._panelConfig.getValue('postfix');\n        return res;\n    }\n    _getFormattedFloat() {\n        var value = this._panelConfig.getValue('valueLabelType') === 'percentage' ?\n            this.progress : this.value;\n        var dm = this._getDecimalsForValue().decimals;\n        if (dm === 0) {\n            return Math.round(value).toString();\n        }\n        var fv = value;\n        for (var i = 0; i < dm; i++) {\n            fv *= 10;\n        }\n        ;\n        var fvs = Math.round(fv).toString();\n        return fvs.substr(0, fvs.length - dm) + '.' + fvs.substr(fvs.length - dm);\n    }\n    _getDecimalsForValue() {\n        var value = this._value;\n        // based on https://github.com/grafana/grafana/blob/v4.1.1/public/app/plugins/panel/singlestat/module.ts\n        if (_.isNumber(this._panelConfig.getValue('decimals'))) {\n            return {\n                decimals: this._panelConfig.getValue('decimals'),\n                scaledDecimals: null\n            };\n        }\n        var delta = value / 2;\n        var dec = -Math.floor(Math.log(delta) / Math.LN10);\n        var magn = Math.pow(10, -dec), norm = delta / magn, // norm is between 1.0 and 10.0\n        size;\n        if (norm < 1.5) {\n            size = 1;\n        }\n        else if (norm < 3) {\n            size = 2;\n            // special case for 2.5, requires an extra decimal\n            if (norm > 2.25) {\n                size = 2.5;\n                ++dec;\n            }\n        }\n        else if (norm < 7.5) {\n            size = 5;\n        }\n        else {\n            size = 10;\n        }\n        size *= magn;\n        // reduce starting decimals if not needed\n        if (Math.floor(value) === value) {\n            dec = 0;\n        }\n        var result = {};\n        result.decimals = Math.max(0, dec);\n        result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n        return result;\n    }\n    get color() {\n        var colorType = this._panelConfig.getValue('coloringType');\n        if (colorType === 'auto') {\n            return 'auto';\n        }\n        if (colorType === 'thresholds') {\n            var thresholdsStr = this._panelConfig.getValue('thresholds');\n            var colors = this._panelConfig.getValue('colors');\n            var value = this.progress;\n            if (thresholdsStr === undefined) {\n                return colors[0];\n            }\n            var thresholds = thresholdsStr.split(',').map(parseFloat);\n            for (var i = thresholds.length; i > 0; i--) {\n                if (value >= thresholds[i - 1]) {\n                    return colors[i];\n                }\n            }\n            return colors[0];\n        }\n        if (colorType === 'key mapping') {\n            var colorKeyMappings = this._panelConfig.getValue('colorKeyMappings');\n            var keyColorMapping = _.find(colorKeyMappings, k => k.key === this._key);\n            if (keyColorMapping === undefined) {\n                return this._panelConfig.getValue('colorsKeyMappingDefault');\n            }\n            return keyColorMapping.color;\n        }\n        throw new Error('Unknown color type ' + colorType);\n    }\n}\nexports.ProgressItem = ProgressItem;\nclass Mapper {\n    constructor(panelConfig, templateSrv) {\n        this._panelConfig = panelConfig;\n        this._templateSrv = templateSrv;\n    }\n    mapMetricData(seriesList) {\n        if (seriesList === undefined || seriesList.length == 0) {\n            return [];\n        }\n        var kstat = [];\n        if (this._panelConfig.getValue('mappingType') === 'datapoint to datapoint') {\n            if (this._panelConfig.getValue('statNameOptionValue') === 'total' && seriesList.length == 1) {\n                kstat = this._mapKeysTotal(seriesList);\n            }\n            else {\n                kstat = this._mapNumeric(seriesList);\n            }\n        }\n        else {\n            kstat = this._mapTargetToDatapoints(seriesList);\n        }\n        var maxValue = -1;\n        if (this._panelConfig.getValue('statProgressType') === 'shared') {\n            let total = 0;\n            for (let i = 0; i < kstat.length; i++) {\n                total += kstat[i][1];\n            }\n            maxValue = total;\n        }\n        if (this._panelConfig.getValue('statProgressType') === 'max value') {\n            let max = -Infinity;\n            if (this._panelConfig.getValue('statProgressMaxValue') !== null) {\n                max = this._panelConfig.getValue('statProgressMaxValue');\n            }\n            else {\n                for (let i = 0; i < kstat.length; i++) {\n                    max = Math.max(kstat[i][1], max);\n                }\n            }\n            maxValue = max;\n        }\n        const alias = this._panelConfig.getValue('alias');\n        if (alias !== '') {\n            kstat.forEach(k => {\n                const scopedVars = {\n                    '__key': { value: k[0] }\n                };\n                k[0] = this._templateSrv.replace(alias, scopedVars);\n            });\n        }\n        return _.map(kstat, k => new ProgressItem(this._panelConfig, k[0], k[1], maxValue));\n    }\n    _mapKeysTotal(seriesList) {\n        if (seriesList.length !== 1) {\n            throw new Error('Expecting list of keys: got more than one timeseries');\n        }\n        var kv = {};\n        var datapointsLength = seriesList[0].datapoints.length;\n        for (let i = 0; i < datapointsLength; i++) {\n            let k = seriesList[0].datapoints[i][0].toString();\n            if (kv[k] === undefined) {\n                kv[k] = 0;\n            }\n            kv[k]++;\n        }\n        var res = [];\n        for (let k in kv) {\n            res.push([k, kv[k]]);\n        }\n        return res;\n    }\n    _mapNumeric(seriesList) {\n        if (seriesList.length != 2) {\n            throw new Error('Expecting timeseries in format (key, value). You can use keys only in total mode');\n        }\n        if (seriesList[0].datapoints.length !== seriesList[1].datapoints.length) {\n            throw new Error('Timeseries has different length');\n        }\n        var kv = {};\n        var datapointsLength = seriesList[0].datapoints.length;\n        var nullMapping = this._panelConfig.getValue('nullMapping');\n        for (let i = 0; i < datapointsLength; i++) {\n            let k = seriesList[0].datapoints[i][0].toString();\n            let v = seriesList[1].datapoints[i][0];\n            let vn = parseFloat(v);\n            if (v === null) {\n                if (nullMapping === undefined || nullMapping === null) {\n                    throw new Error('Got null value. You set null value mapping in Options -> Mapping -> Null');\n                }\n                console.log('nullMapping ->' + nullMapping);\n                vn = nullMapping;\n            }\n            if (isNaN(vn)) {\n                throw new Error('Got non-numberic value: ' + v);\n            }\n            if (kv[k] === undefined) {\n                kv[k] = [];\n            }\n            kv[k].push(vn);\n        }\n        var res = [];\n        for (let k in kv) {\n            res.push([k, this._flatSeries(kv[k])]);\n        }\n        return res;\n    }\n    _mapTargetToDatapoints(seriesList) {\n        return seriesList.map(serie => [\n            serie.target,\n            this._flatSeries(serie.datapoints.map(datapoint => datapoint[0]))\n        ]);\n    }\n    _flatSeries(values) {\n        if (values.length === 0) {\n            return 0;\n        }\n        var t = this._panelConfig.getValue('statNameOptionValue');\n        if (t === 'total') {\n            return _.sum(values);\n        }\n        if (t === 'max') {\n            return _.max(values);\n        }\n        if (t === 'min') {\n            return _.min(values);\n        }\n        if (t === 'current') {\n            return values[values.length - 1];\n        }\n        return 0;\n    }\n}\nexports.Mapper = Mapper;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst panel_config_1 = require(\"./panel-config\");\nconst mapper_1 = require(\"./mapper\");\nconst progress_1 = require(\"./directives/progress\");\nconst sdk_1 = require(\"grafana/app/plugins/sdk\");\nconst _ = require(\"lodash\");\nconst DEFAULTS = {\n    statNameOptionValue: 'current',\n    statProgressType: 'shared',\n    statProgressMaxValue: null,\n    coloringType: 'auto',\n    sortingOrder: 'none',\n    valueLabelType: 'percentage',\n    mappingType: 'datapoint to datapoint',\n    alias: '',\n    prefix: '',\n    postfix: '',\n    thresholds: '10, 30',\n    // https://github.com/grafana/grafana/blob/v4.1.1/public/app/plugins/panel/singlestat/module.ts#L57\n    colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n    colorsKeyMappingDefault: 'rgba(245, 54, 54, 0.9)',\n    colorKeyMappings: [],\n    nullMapping: undefined\n};\nclass Ctrl extends sdk_1.MetricsPanelCtrl {\n    constructor($scope, $injector, templateSrv) {\n        super($scope, $injector);\n        this.templateSrv = templateSrv;\n        this.statNameOptions = ['current', 'min', 'max', 'total'];\n        this.statProgressTypeOptions = ['max value', 'shared'];\n        this.coloringTypeOptions = ['auto', 'thresholds', 'key mapping'];\n        this.sortingOrderOptions = ['none', 'increasing', 'decreasing'];\n        this.valueLabelTypeOptions = ['absolute', 'percentage'];\n        // TODO: change option names or add a tip in editor\n        this.mappingTypeOptions = ['datapoint to datapoint', 'target to datapoint'];\n        _.defaults(this.panel, DEFAULTS);\n        this._panelConfig = new panel_config_1.PanelConfig(this.panel);\n        this._initStyles();\n        progress_1.initProgress(this._panelConfig, 'progressListPluginProgress');\n        this.mapper = new mapper_1.Mapper(this._panelConfig, this.templateSrv);\n        this.items = [];\n        this.events.on('init-edit-mode', this._onInitEditMode.bind(this));\n        this.events.on('data-received', this._onDataReceived.bind(this));\n        this.events.on('render', this._onRender.bind(this));\n    }\n    link(scope, element) {\n        this._element = element;\n    }\n    _initStyles() {\n        // small hack to load base styles\n        const cssPath = this._panelConfig.pluginDirName.replace('public/', '');\n        sdk_1.loadPluginCss({\n            light: cssPath + 'css/panel.base.css',\n            dark: cssPath + 'css/panel.base.css'\n        });\n        sdk_1.loadPluginCss({\n            light: cssPath + 'css/panel.light.css',\n            dark: cssPath + 'css/panel.dark.css'\n        });\n    }\n    _onRender() {\n        var items = this.mapper.mapMetricData(this._seriesList);\n        if (this._panelConfig.getValue('sortingOrder') === 'increasing') {\n            items = _.sortBy(items, i => i.progress);\n        }\n        if (this._panelConfig.getValue('sortingOrder') === 'decreasing') {\n            items = _.sortBy(items, i => -i.progress);\n        }\n        this.$scope.items = items;\n        this._element.find('.table-panel-scroll').css({\n            'height': `${this.height}px`,\n            'max-height': `${this.height}px`\n        });\n    }\n    _onDataReceived(seriesList) {\n        this._seriesList = seriesList;\n        this.render();\n    }\n    _onInitEditMode() {\n        var thisPartialPath = this._panelConfig.pluginDirName + 'partials/';\n        this.addEditorTab('Options', thisPartialPath + 'options.html', 2);\n    }\n    invertColorOrder() {\n        var tmp = this.panel.colors[0];\n        this.panel.colors[0] = this.panel.colors[2];\n        this.panel.colors[2] = tmp;\n        this.render();\n    }\n    addColorKeyMapping() {\n        this.panel.colorKeyMappings.push({\n            key: 'KEY_NAME',\n            color: 'rgba(50, 172, 45, 0.97)'\n        });\n    }\n    removeColorKeyMapping(index) {\n        this.panel.colorKeyMappings.splice(index, 1);\n        this.render();\n    }\n    _dataError(err) {\n        this.$scope.data = [];\n        this.$scope.dataError = err;\n    }\n}\nCtrl.templateUrl = 'partials/template.html';\nexports.PanelCtrl = Ctrl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PanelConfig {\n    constructor(panel) {\n        this._panel = panel;\n    }\n    getValue(key) {\n        return this._panel[key];\n    }\n    setValue(key, value) {\n        this._panel[key] = value;\n    }\n    get pluginDirName() {\n        if (!this._pluginDirName) {\n            var panels = window['grafanaBootData'].settings.panels;\n            var thisPanel = panels[this._panel.type];\n            console.log(thisPanel);\n            // the system loader preprends publib to the url,\n            // add a .. to go back one level\n            this._pluginDirName = thisPanel.baseUrl + '/';\n        }\n        return this._pluginDirName;\n    }\n}\nexports.PanelConfig = PanelConfig;\n","module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_core_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_plugins_sdk__;","module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;"],"sourceRoot":""}