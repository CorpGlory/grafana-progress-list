{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./directives/progress.ts","webpack:///./graph_tooltip.ts","webpack:///./mapper.ts","webpack:///./module.ts","webpack:///./panel-config.ts","webpack:///./value_formatter.ts","webpack:///external \"app/core/core\"","webpack:///external \"app/plugins/sdk\"","webpack:///external \"lodash\""],"names":["Object","defineProperty","exports","value","core_1","require","directiveInited","initProgress","panelConfig","directiveName","coreModule","directive","templateUrl","pluginDirName","restrict","scope","item","onHover","onMouseLeave","_","TooltipMode","GraphTooltip","getSeriesFn","items","tooltipMode","_visible","$tooltip","$","detach","pos","index","seriesList","length","currentValues","ALL_SERIES","map","serie","idx","_convertSerieToHtml","filter","undefined","_renderAndShow","join","remove","innerHtml","title","html","place_tt","pageX","pageY","isBold","alias","target","currentFormattedValue","value_formatter_1","module_1","StatType","ProgressItem","key","aggregatedValue","maxAggregatedValue","currentValue","currentMaxValue","_panelConfig","_key","_aggregatedValue","_maxAggregatedValue","_currentValue","_currentMaxValue","getValue","currentProgress","getFormattedValue","aggregatedProgress","colorType","thresholdsStr","colors","thresholds","split","parseFloat","i","colorKeyMappings","keyColorMapping","find","k","color","Error","titleType","TitleViewOptions","SEPARATE_TITLE_LINE","barHeight","titleTopMargin","valueTopMargin","INLINE","Mapper","templateSrv","_templateSrv","statType","mappingType","statProgressType","statProgressMaxValue","nullMapping","kstat","currentStat","TOTAL","_mapKeysTotal","_mapNumeric","CURRENT","_mapTargetToDatapoints","maxValue","_getMaxValue","forEach","scopedVars","__key","replace","total","max","Infinity","Math","kv","datapointsLength","datapoints","toString","res","push","v","vn","console","log","isNaN","_flatSeries","datapoint","values","sum","MAX","MIN","min","last","graph_tooltip_1","panel_config_1","mapper_1","progress_1","sdk_1","DEFAULTS","statNameOptionValue","coloringType","titleViewType","sortingOrder","valueLabelType","prefix","postfix","colorsKeyMappingDefault","opacity","Ctrl","$scope","$injector","statNameOptions","statProgressTypeOptions","coloringTypeOptions","titleViewTypeOptions","sortingOrderOptions","valueLabelTypeOptions","mappingTypeOptions","tooltipModeOptions","defaults","panel","PanelConfig","_initStyles","mapper","events","on","_onInitEditMode","bind","_onDataReceived","_onRender","element","_element","cssPath","loadPluginCss","light","dark","mapMetricData","_seriesList","sortBy","css","height","_tooltip","destroy","event","show","originalEvent","clear","render","thisPartialPath","addEditorTab","tmp","splice","err","data","dataError","MetricsPanelCtrl","PanelCtrl","_panel","_pluginDirName","panels","window","settings","thisPanel","type","baseUrl","decimals","getFormattedFloat","dm","getDecimalsForValue","round","fv","fvs","substr","isNumber","scaledDecimals","delta","dec","floor","LN10","magn","pow","norm","size","result"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./module.ts\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"grafana/app/core/core\");\nvar directiveInited = false;\nfunction initProgress(panelConfig, directiveName = 'progress') {\n    if (directiveInited) {\n        return;\n    }\n    directiveInited = true;\n    core_1.coreModule\n        .directive(directiveName, function () {\n        return {\n            templateUrl: panelConfig.pluginDirName + 'directives/progress.html',\n            restrict: 'E',\n            scope: {\n                item: '=',\n                onHover: '&',\n                onMouseLeave: '&'\n            }\n        };\n    });\n}\nexports.initProgress = initProgress;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nvar TooltipMode;\n(function (TooltipMode) {\n    TooltipMode[\"SINGLE\"] = \"single\";\n    TooltipMode[\"ALL_SERIES\"] = \"all series\";\n})(TooltipMode = exports.TooltipMode || (exports.TooltipMode = {}));\n;\nclass GraphTooltip {\n    constructor(getSeriesFn, items, tooltipMode) {\n        this.getSeriesFn = getSeriesFn;\n        this.items = items;\n        this.tooltipMode = tooltipMode;\n        this._visible = false;\n        this.$tooltip = $('<div class=\"graph-tooltip\">');\n    }\n    clear() {\n        this._visible = false;\n        this.$tooltip.detach();\n    }\n    show(pos, index) {\n        this._visible = true;\n        const seriesList = this.getSeriesFn();\n        if (seriesList.length === 0) {\n            return;\n        }\n        let currentValues = [];\n        if (this.tooltipMode === TooltipMode.ALL_SERIES) {\n            currentValues = _.map(seriesList, (serie, idx) => this._convertSerieToHtml(serie, this.items[idx], index === idx))\n                .filter(value => value !== undefined);\n        }\n        else {\n            currentValues = [this._convertSerieToHtml(seriesList[index], this.items[index], true)];\n        }\n        this._renderAndShow(currentValues.join('\\n'), pos);\n    }\n    destroy() {\n        this._visible = false;\n        this.$tooltip.remove();\n    }\n    get visible() { return this._visible; }\n    _renderAndShow(innerHtml, pos) {\n        const title = `<div class=\"graph-tooltip-time\">Current value</div>`;\n        this.$tooltip.html(title + innerHtml).place_tt(pos.pageX + 20, pos.pageY);\n    }\n    _convertSerieToHtml(serie, item, isBold) {\n        const html = `\n      <div class=\"graph-tooltip-list-item\">\n        <div class=\"graph-tooltip-series-name\">\n          ${isBold ? '<b>' : ''}\n          ${serie.alias || serie.target}\n          ${isBold ? '</b>' : ''}\n        </div>\n        <div class=\"graph-tooltip-value\">\n          ${item.currentFormattedValue}\n        </div>\n      </div>\n    `;\n        return html;\n    }\n}\nexports.GraphTooltip = GraphTooltip;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst value_formatter_1 = require(\"./value_formatter\");\nconst module_1 = require(\"./module\");\nconst _ = require(\"lodash\");\nvar StatType;\n(function (StatType) {\n    StatType[\"CURRENT\"] = \"current\";\n    StatType[\"MIN\"] = \"min\";\n    StatType[\"MAX\"] = \"max\";\n    StatType[\"TOTAL\"] = \"total\";\n})(StatType = exports.StatType || (exports.StatType = {}));\n;\nclass ProgressItem {\n    constructor(panelConfig, key, aggregatedValue, maxAggregatedValue, currentValue, currentMaxValue) {\n        this._panelConfig = panelConfig;\n        this._key = key;\n        this._aggregatedValue = aggregatedValue;\n        this._maxAggregatedValue = maxAggregatedValue;\n        // TODO: currentValue and currentMaxValue is not the best idea\n        this._currentValue = currentValue;\n        this._currentMaxValue = currentMaxValue;\n    }\n    get title() {\n        return this._key;\n    }\n    get aggregatedProgress() {\n        return 100 * this._aggregatedValue / this._maxAggregatedValue;\n    }\n    get currentProgress() {\n        return 100 * this._currentValue / this._currentMaxValue;\n    }\n    get maxValue() {\n        return this._maxAggregatedValue;\n    }\n    get aggregatedValue() {\n        return this._aggregatedValue;\n    }\n    get currentValue() {\n        return this._currentValue;\n    }\n    get currentFormattedValue() {\n        const value = this._panelConfig.getValue('valueLabelType') === 'percentage' ?\n            this.currentProgress :\n            this._currentValue;\n        return value_formatter_1.getFormattedValue(value, this._panelConfig.getValue('prefix'), this._panelConfig.getValue('postfix'), this._panelConfig.getValue('decimals'));\n    }\n    get formattedValue() {\n        const value = this._panelConfig.getValue('valueLabelType') === 'percentage' ?\n            this.aggregatedProgress :\n            this._aggregatedValue;\n        return value_formatter_1.getFormattedValue(value, this._panelConfig.getValue('prefix'), this._panelConfig.getValue('postfix'), this._panelConfig.getValue('decimals'));\n    }\n    get opacity() {\n        return this._panelConfig.getValue('opacity');\n    }\n    get color() {\n        var colorType = this._panelConfig.getValue('coloringType');\n        if (colorType === 'auto') {\n            return 'auto';\n        }\n        if (colorType === 'thresholds') {\n            var thresholdsStr = this._panelConfig.getValue('thresholds');\n            var colors = this._panelConfig.getValue('colors');\n            var value = this.aggregatedProgress;\n            if (thresholdsStr === undefined) {\n                return colors[0];\n            }\n            var thresholds = thresholdsStr.split(',').map(parseFloat);\n            for (var i = thresholds.length; i > 0; i--) {\n                if (value >= thresholds[i - 1]) {\n                    return colors[i];\n                }\n            }\n            return colors[0];\n        }\n        if (colorType === 'key mapping') {\n            var colorKeyMappings = this._panelConfig.getValue('colorKeyMappings');\n            var keyColorMapping = _.find(colorKeyMappings, k => k.key === this._key);\n            if (keyColorMapping === undefined) {\n                return this._panelConfig.getValue('colorsKeyMappingDefault');\n            }\n            return keyColorMapping.color;\n        }\n        throw new Error('Unknown color type ' + colorType);\n    }\n    get titleParams() {\n        const titleType = this._panelConfig.getValue('titleViewType');\n        switch (titleType) {\n            case module_1.TitleViewOptions.SEPARATE_TITLE_LINE:\n                return {\n                    barHeight: 8,\n                    titleTopMargin: 0,\n                    valueTopMargin: -22\n                };\n            case module_1.TitleViewOptions.INLINE:\n                return {\n                    barHeight: 20,\n                    titleTopMargin: -20,\n                    valueTopMargin: -18\n                };\n            default:\n                throw new Error(`Wrong titleType: ${titleType}`);\n        }\n    }\n}\nexports.ProgressItem = ProgressItem;\nclass Mapper {\n    constructor(panelConfig, templateSrv) {\n        this._panelConfig = panelConfig;\n        this._templateSrv = templateSrv;\n    }\n    mapMetricData(seriesList) {\n        const statType = this._panelConfig.getValue('statNameOptionValue');\n        const mappingType = this._panelConfig.getValue('mappingType');\n        const statProgressType = this._panelConfig.getValue('statProgressType');\n        const statProgressMaxValue = this._panelConfig.getValue('statProgressMaxValue');\n        const alias = this._panelConfig.getValue('alias');\n        const nullMapping = this._panelConfig.getValue('nullMapping');\n        if (seriesList === undefined || seriesList.length == 0) {\n            return [];\n        }\n        let kstat = [];\n        let currentStat = [];\n        if (mappingType === 'datapoint to datapoint') {\n            if (statType === StatType.TOTAL && seriesList.length == 1) {\n                kstat = this._mapKeysTotal(seriesList);\n            }\n            else {\n                kstat = this._mapNumeric(seriesList, statType, nullMapping);\n            }\n            currentStat = this._mapNumeric(seriesList, StatType.CURRENT, nullMapping);\n        }\n        else {\n            kstat = this._mapTargetToDatapoints(seriesList, statType);\n            currentStat = this._mapTargetToDatapoints(seriesList, StatType.CURRENT);\n        }\n        const maxValue = this._getMaxValue(kstat, statProgressType, statProgressMaxValue);\n        const currentMaxValue = this._getMaxValue(currentStat, statProgressType, statProgressMaxValue);\n        if (alias !== '') {\n            kstat.forEach(k => {\n                const scopedVars = {\n                    __key: { value: k[0] }\n                };\n                k[0] = this._templateSrv.replace(alias, scopedVars);\n            });\n        }\n        return _.map(kstat, (k, idx) => new ProgressItem(this._panelConfig, k[0], k[1], maxValue, currentStat[idx][1], currentMaxValue));\n    }\n    // TODO: enum statProgressType\n    _getMaxValue(kstat, statProgressType, statProgressMaxValue) {\n        if (statProgressType === 'shared') {\n            let total = 0;\n            for (let i = 0; i < kstat.length; i++) {\n                total += kstat[i][1];\n            }\n            return total;\n        }\n        if (statProgressType === 'max value') {\n            let max = -Infinity;\n            if (statProgressMaxValue !== null) {\n                max = statProgressMaxValue;\n            }\n            else {\n                for (let i = 0; i < kstat.length; i++) {\n                    max = Math.max(kstat[i][1], max);\n                }\n            }\n            return max;\n        }\n        return -1;\n    }\n    _mapKeysTotal(seriesList) {\n        if (seriesList.length !== 1) {\n            throw new Error('Expecting list of keys: got more than one timeseries');\n        }\n        var kv = {};\n        var datapointsLength = seriesList[0].datapoints.length;\n        for (let i = 0; i < datapointsLength; i++) {\n            let k = seriesList[0].datapoints[i][0].toString();\n            if (kv[k] === undefined) {\n                kv[k] = 0;\n            }\n            kv[k]++;\n        }\n        var res = [];\n        for (let k in kv) {\n            res.push([k, kv[k]]);\n        }\n        return res;\n    }\n    _mapNumeric(seriesList, statType, nullMapping) {\n        if (seriesList.length != 2) {\n            throw new Error('Expecting timeseries in format (key, value). You can use keys only in total mode');\n        }\n        if (seriesList[0].datapoints.length !== seriesList[1].datapoints.length) {\n            throw new Error('Timeseries has different length');\n        }\n        var kv = {};\n        var datapointsLength = seriesList[0].datapoints.length;\n        for (let i = 0; i < datapointsLength; i++) {\n            let k = seriesList[0].datapoints[i][0].toString();\n            let v = seriesList[1].datapoints[i][0];\n            let vn = parseFloat(v);\n            if (v === null) {\n                if (nullMapping === undefined || nullMapping === null) {\n                    throw new Error('Got null value. You set null value mapping in Options -> Mapping -> Null');\n                }\n                console.log('nullMapping ->' + nullMapping);\n                vn = nullMapping;\n            }\n            if (isNaN(vn)) {\n                throw new Error('Got non-numberic value: ' + v);\n            }\n            if (kv[k] === undefined) {\n                kv[k] = [];\n            }\n            kv[k].push(vn);\n        }\n        var res = [];\n        for (let k in kv) {\n            res.push([k, this._flatSeries(kv[k], statType)]);\n        }\n        return res;\n    }\n    _mapTargetToDatapoints(seriesList, statType) {\n        return seriesList.map(serie => [\n            serie.target,\n            this._flatSeries(serie.datapoints.map(datapoint => datapoint[0]), statType)\n        ]);\n    }\n    _flatSeries(values, statType) {\n        if (values.length === 0) {\n            return 0;\n        }\n        if (statType === StatType.TOTAL) {\n            return _.sum(values);\n        }\n        if (statType === StatType.MAX) {\n            return _.max(values);\n        }\n        if (statType === StatType.MIN) {\n            return _.min(values);\n        }\n        if (statType === StatType.CURRENT) {\n            return _.last(values);\n        }\n        return 0;\n    }\n}\nexports.Mapper = Mapper;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst graph_tooltip_1 = require(\"./graph_tooltip\");\nconst panel_config_1 = require(\"./panel-config\");\nconst mapper_1 = require(\"./mapper\");\nconst progress_1 = require(\"./directives/progress\");\nconst sdk_1 = require(\"grafana/app/plugins/sdk\");\nconst _ = require(\"lodash\");\nvar TitleViewOptions;\n(function (TitleViewOptions) {\n    TitleViewOptions[\"SEPARATE_TITLE_LINE\"] = \"Separate title line\";\n    TitleViewOptions[\"INLINE\"] = \"Inline\";\n})(TitleViewOptions = exports.TitleViewOptions || (exports.TitleViewOptions = {}));\n;\nconst DEFAULTS = {\n    statNameOptionValue: mapper_1.StatType.CURRENT,\n    statProgressType: 'shared',\n    statProgressMaxValue: null,\n    coloringType: 'auto',\n    titleViewType: TitleViewOptions.SEPARATE_TITLE_LINE,\n    sortingOrder: 'none',\n    valueLabelType: 'percentage',\n    mappingType: 'datapoint to datapoint',\n    alias: '',\n    prefix: '',\n    postfix: '',\n    thresholds: '10, 30',\n    // https://github.com/grafana/grafana/blob/v4.1.1/public/app/plugins/panel/singlestat/module.ts#L57\n    colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n    colorsKeyMappingDefault: 'rgba(245, 54, 54, 0.9)',\n    colorKeyMappings: [],\n    nullMapping: undefined,\n    tooltipMode: graph_tooltip_1.TooltipMode.ALL_SERIES,\n    opacity: 0.5\n};\nclass Ctrl extends sdk_1.MetricsPanelCtrl {\n    constructor($scope, $injector, templateSrv) {\n        super($scope, $injector);\n        this.templateSrv = templateSrv;\n        this.statNameOptions = _.values(mapper_1.StatType);\n        this.statProgressTypeOptions = ['max value', 'shared'];\n        this.coloringTypeOptions = ['auto', 'thresholds', 'key mapping'];\n        this.titleViewTypeOptions = _.values(TitleViewOptions);\n        this.sortingOrderOptions = ['none', 'increasing', 'decreasing'];\n        this.valueLabelTypeOptions = ['absolute', 'percentage'];\n        // TODO: change option names or add a tip in editor\n        this.mappingTypeOptions = ['datapoint to datapoint', 'target to datapoint'];\n        this.tooltipModeOptions = _.values(graph_tooltip_1.TooltipMode);\n        _.defaults(this.panel, DEFAULTS);\n        this._panelConfig = new panel_config_1.PanelConfig(this.panel);\n        this._initStyles();\n        progress_1.initProgress(this._panelConfig, 'progressListPluginProgress');\n        this.mapper = new mapper_1.Mapper(this._panelConfig, this.templateSrv);\n        this.items = [];\n        this.events.on('init-edit-mode', this._onInitEditMode.bind(this));\n        this.events.on('data-received', this._onDataReceived.bind(this));\n        this.events.on('render', this._onRender.bind(this));\n    }\n    link(scope, element) {\n        this._element = element;\n    }\n    _initStyles() {\n        // small hack to load base styles\n        const cssPath = this._panelConfig.pluginDirName.replace('public/', '');\n        sdk_1.loadPluginCss({\n            light: cssPath + 'css/panel.base.css',\n            dark: cssPath + 'css/panel.base.css'\n        });\n        sdk_1.loadPluginCss({\n            light: cssPath + 'css/panel.light.css',\n            dark: cssPath + 'css/panel.dark.css'\n        });\n    }\n    _onRender() {\n        let items = this.mapper.mapMetricData(this._seriesList);\n        if (this._panelConfig.getValue('sortingOrder') === 'increasing') {\n            items = _.sortBy(items, i => i.aggregatedProgress);\n        }\n        if (this._panelConfig.getValue('sortingOrder') === 'decreasing') {\n            items = _.sortBy(items, i => -i.aggregatedProgress);\n        }\n        this.$scope.items = items;\n        this._element.find('.table-panel-scroll').css({\n            'height': `${this.height}px`,\n            'max-height': `${this.height}px`\n        });\n        if (this._tooltip !== undefined) {\n            this._tooltip.destroy();\n        }\n        this._tooltip = new graph_tooltip_1.GraphTooltip(() => this._seriesList, items, this.panel.tooltipMode);\n    }\n    onHover(index, event) {\n        this._tooltip.show(event.originalEvent, index);\n    }\n    onMouseLeave() {\n        this._tooltip.clear();\n    }\n    _onDataReceived(seriesList) {\n        this._seriesList = seriesList;\n        this.render();\n    }\n    _onInitEditMode() {\n        var thisPartialPath = this._panelConfig.pluginDirName + 'partials/';\n        this.addEditorTab('Options', thisPartialPath + 'options.html', 2);\n    }\n    invertColorOrder() {\n        var tmp = this.panel.colors[0];\n        this.panel.colors[0] = this.panel.colors[2];\n        this.panel.colors[2] = tmp;\n        this.render();\n    }\n    addColorKeyMapping() {\n        this.panel.colorKeyMappings.push({\n            key: 'KEY_NAME',\n            color: 'rgba(50, 172, 45, 0.97)'\n        });\n    }\n    removeColorKeyMapping(index) {\n        this.panel.colorKeyMappings.splice(index, 1);\n        this.render();\n    }\n    _dataError(err) {\n        this.$scope.data = [];\n        this.$scope.dataError = err;\n    }\n}\nCtrl.templateUrl = 'partials/template.html';\nexports.PanelCtrl = Ctrl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PanelConfig {\n    constructor(panel) {\n        this._panel = panel;\n    }\n    getValue(key) {\n        return this._panel[key];\n    }\n    setValue(key, value) {\n        this._panel[key] = value;\n    }\n    get pluginDirName() {\n        if (!this._pluginDirName) {\n            var panels = window['grafanaBootData'].settings.panels;\n            var thisPanel = panels[this._panel.type];\n            // the system loader preprends publib to the url,\n            // add a .. to go back one level\n            this._pluginDirName = thisPanel.baseUrl + '/';\n        }\n        return this._pluginDirName;\n    }\n}\nexports.PanelConfig = PanelConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nfunction getFormattedValue(value, prefix, postfix, decimals) {\n    return `${prefix}${getFormattedFloat(value, decimals)}${postfix}`;\n}\nexports.getFormattedValue = getFormattedValue;\nfunction getFormattedFloat(value, decimals) {\n    let dm = getDecimalsForValue(value, decimals).decimals;\n    if (dm === 0) {\n        return Math.round(value).toString();\n    }\n    let fv = value;\n    for (let i = 0; i < dm; i++) {\n        fv *= 10;\n    }\n    ;\n    let fvs = Math.round(fv).toString();\n    return fvs.substr(0, fvs.length - dm) + '.' + fvs.substr(fvs.length - dm);\n}\nfunction getDecimalsForValue(value, decimals) {\n    // based on https://github.com/grafana/grafana/blob/v4.1.1/public/app/plugins/panel/singlestat/module.ts\n    if (_.isNumber(decimals)) {\n        return {\n            decimals,\n            scaledDecimals: null\n        };\n    }\n    let delta = value / 2;\n    let dec = -Math.floor(Math.log(delta) / Math.LN10);\n    let magn = Math.pow(10, -dec), norm = delta / magn, // norm is between 1.0 and 10.0\n    size;\n    if (norm < 1.5) {\n        size = 1;\n    }\n    else if (norm < 3) {\n        size = 2;\n        // special case for 2.5, requires an extra decimal\n        if (norm > 2.25) {\n            size = 2.5;\n            ++dec;\n        }\n    }\n    else if (norm < 7.5) {\n        size = 5;\n    }\n    else {\n        size = 10;\n    }\n    size *= magn;\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) {\n        dec = 0;\n    }\n    let result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n    return result;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_core_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_plugins_sdk__;","module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;"],"sourceRoot":""}