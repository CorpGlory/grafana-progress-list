{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./graph_tooltip.ts","webpack:///./mapper.ts","webpack:///./module.ts","webpack:///./panel-config.ts","webpack:///./value_formatter.ts","webpack:///external \"app/plugins/sdk\"","webpack:///external \"lodash\""],"names":["Object","defineProperty","exports","value","_","require","TooltipMode","GraphTooltip","items","tooltipMode","_visible","$tooltip","$","detach","seriesList","getSeriesFn","length","title","undefined","showTitle","_renderAndShow","_convertTitleAndValueToHtml","pos","currentValues","ALL_SERIES","map","serie","idx","_convertSerieToHtml","index","filter","join","remove","innerHtml","html","place_tt","pageX","pageY","item","isBold","alias","target","currentFormattedValue","value_formatter_1","module_1","StatType","MultiProgressItem","_panelConfig","_title","_keys","_values","_maxValue","Error","sum","values","Math","floor","sumOfValues","getFormattedValue","getValue","titleType","TitleViewOptions","SEPARATE_TITLE_LINE","barHeight","titleTopMargin","valueTopMargin","INLINE","ProgressItem","panelConfig","key","aggregatedValue","maxAggregatedValue","currentValue","currentMaxValue","_key","_aggregatedValue","_maxAggregatedValue","_currentValue","_currentMaxValue","currentProgress","aggregatedProgress","colorType","thresholdsStr","colors","thresholds","split","parseFloat","i","colorKeyMappings","keyColorMapping","find","k","color","Mapper","templateSrv","_templateSrv","statType","mappingType","statProgressType","statProgressMaxValue","nullMapping","kstat","currentStat","columns","keys","col","text","keyColumn","keyIndex","findIndex","skipIndexes","skipColumn","push","maxValue","max","rows","row","includes","filteredKeys","TOTAL","_mapKeysTotal","_mapNumeric","CURRENT","_mapTargetToDatapoints","_getMaxValue","forEach","scopedVars","__key","replace","total","Infinity","kv","datapointsLength","datapoints","toString","res","v","vn","console","log","isNaN","_flatSeries","datapoint","MAX","MIN","min","last","graph_tooltip_1","panel_config_1","mapper_1","sdk_1","ERROR_MAPPING","ERROR_NO_DATA","DEFAULTS","statNameOptionValue","coloringType","titleViewType","sortingOrder","valueLabelType","prefix","postfix","colorsKeyMappingDefault","opacity","Ctrl","$scope","$injector","statNameOptions","statProgressTypeOptions","coloringTypeOptions","titleViewTypeOptions","sortingOrderOptions","valueLabelTypeOptions","mappingTypeOptions","tooltipModeOptions","_panelAlert","active","message","defaults","panel","PanelConfig","_initStyles","mapper","events","on","_onInitEditMode","bind","_onDataReceived","_onRender","scope","element","_element","cssPath","pluginDirName","loadPluginCss","light","dark","_seriesList","mapMetricData","e","sortBy","_tooltip","destroy","event","show","clear","render","thisPartialPath","addEditorTab","tmp","splice","err","data","dataError","MetricsPanelCtrl","templateUrl","PanelCtrl","_panel","_pluginDirName","panels","window","settings","thisPanel","type","baseUrl","decimals","getFormattedFloat","dm","getDecimalsForValue","round","fv","fvs","substr","isNumber","scaledDecimals","delta","dec","LN10","magn","pow","norm","size","result"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./module.ts\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nvar TooltipMode;\n(function (TooltipMode) {\n    TooltipMode[\"SINGLE\"] = \"single\";\n    TooltipMode[\"ALL_SERIES\"] = \"all series\";\n})(TooltipMode = exports.TooltipMode || (exports.TooltipMode = {}));\n;\nclass GraphTooltip {\n    constructor(items, tooltipMode) {\n        this.items = items;\n        this.tooltipMode = tooltipMode;\n        this._visible = false;\n        this.$tooltip = $('<div class=\"graph-tooltip\">');\n    }\n    clear() {\n        this._visible = false;\n        this.$tooltip.detach();\n    }\n    show() {\n        this._visible = true;\n        const seriesList = this.getSeriesFn();\n        if (seriesList.length === 0) {\n            return;\n        }\n        if (title !== undefined && value !== undefined) {\n            const showTitle = false;\n            this._renderAndShow(this._convertTitleAndValueToHtml(title, value), pos, showTitle);\n            return;\n        }\n        let currentValues = [];\n        if (this.tooltipMode === TooltipMode.ALL_SERIES) {\n            currentValues = _.map(seriesList, (serie, idx) => this._convertSerieToHtml(serie, this.items[idx], index === idx)).filter(value => value !== undefined);\n        }\n        else {\n            currentValues = [this._convertSerieToHtml(seriesList[index], this.items[index], true)];\n        }\n        this._renderAndShow(currentValues.join('\\n'), pos);\n    }\n    destroy() {\n        this._visible = false;\n        this.$tooltip.remove();\n    }\n    get visible() { return this._visible; }\n    _renderAndShow(innerHtml, pos, showTitle = true) {\n        const title = showTitle ? `<div class=\"graph-tooltip-time\">Current value</div>` : '';\n        // TODO: move this \"20\" to a constant\n        // TODO: check how this work when `pos` is close to the page bottom edge\n        this.$tooltip.html(title + innerHtml).place_tt(pos.pageX + 20, pos.pageY);\n    }\n    _convertSerieToHtml(serie, item, isBold) {\n        return `\n      <div class=\"graph-tooltip-list-item\">\n        <div class=\"graph-tooltip-series-name\">\n          ${isBold ? '<b>' : ''} ${serie.alias || serie.target} ${isBold ? '</b>' : ''}\n        </div>\n        <div class=\"graph-tooltip-value\">${item.currentFormattedValue}</div>\n      </div>\n    `;\n    }\n    _convertTitleAndValueToHtml(title, value) {\n        return `\n      <div class=\"graph-tooltip-list-item\">\n        <div class=\"graph-tooltip-series-name\">\n          <b>${title}</b>\n        </div>\n        <div class=\"graph-tooltip-value\">${value}</div>\n      </div>\n    `;\n    }\n}\nexports.GraphTooltip = GraphTooltip;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst value_formatter_1 = require(\"./value_formatter\");\nconst module_1 = require(\"./module\");\nconst _ = require(\"lodash\");\nvar StatType;\n(function (StatType) {\n    StatType[\"CURRENT\"] = \"current\";\n    StatType[\"MIN\"] = \"min\";\n    StatType[\"MAX\"] = \"max\";\n    StatType[\"TOTAL\"] = \"total\";\n})(StatType = exports.StatType || (exports.StatType = {}));\n;\nclass MultiProgressItem {\n    constructor(_panelConfig, _title, _keys, _values, _maxValue) {\n        this._panelConfig = _panelConfig;\n        this._title = _title;\n        this._keys = _keys;\n        this._values = _values;\n        this._maxValue = _maxValue;\n        if (this._keys.length !== this._values.length) {\n            throw new Error('keys amount should be equal to values amount');\n        }\n    }\n    get title() {\n        return this._title;\n    }\n    get keys() {\n        return this._keys;\n    }\n    get values() {\n        return this._values;\n    }\n    get sumOfValues() {\n        return _.sum(this.values);\n    }\n    get percentValues() {\n        // TODO: this.sumOfValues * 1.1 is a hack to make sure bars don't wrap\n        // (they are wrapped when total width > 98%)\n        return this.values.map(value => Math.floor(value / (this.sumOfValues * 1.1) * 100));\n    }\n    get colors() {\n        // TODO: customize colors\n        return ['green', 'yellow', 'red'];\n    }\n    get aggregatedProgress() {\n        return (_.sum(this.values) / this._maxValue) * 100;\n    }\n    get formattedValue() {\n        return value_formatter_1.getFormattedValue(this.sumOfValues, this._panelConfig.getValue('prefix'), this._panelConfig.getValue('postfix'), this._panelConfig.getValue('decimals'));\n    }\n    get titleParams() {\n        const titleType = this._panelConfig.getValue('titleViewType');\n        switch (titleType) {\n            case module_1.TitleViewOptions.SEPARATE_TITLE_LINE:\n                return {\n                    barHeight: 8,\n                    titleTopMargin: 0,\n                    valueTopMargin: -12\n                };\n            case module_1.TitleViewOptions.INLINE:\n                return {\n                    barHeight: 20,\n                    titleTopMargin: -20,\n                    valueTopMargin: -18\n                };\n            default:\n                throw new Error(`Wrong titleType: ${titleType}`);\n        }\n    }\n    get opacity() {\n        return this._panelConfig.getValue('opacity');\n    }\n}\nexports.MultiProgressItem = MultiProgressItem;\nclass ProgressItem {\n    constructor(panelConfig, key, aggregatedValue, maxAggregatedValue, currentValue, currentMaxValue) {\n        this._panelConfig = panelConfig;\n        this._key = key;\n        this._aggregatedValue = aggregatedValue;\n        this._maxAggregatedValue = maxAggregatedValue;\n        // TODO: currentValue and currentMaxValue is not the best idea\n        this._currentValue = currentValue;\n        this._currentMaxValue = currentMaxValue;\n    }\n    get title() {\n        return this._key;\n    }\n    get aggregatedProgress() {\n        return 100 * this._aggregatedValue / this._maxAggregatedValue;\n    }\n    get currentProgress() {\n        return 100 * this._currentValue / this._currentMaxValue;\n    }\n    get maxValue() {\n        return this._maxAggregatedValue;\n    }\n    get aggregatedValue() {\n        return this._aggregatedValue;\n    }\n    get currentValue() {\n        return this._currentValue;\n    }\n    get currentFormattedValue() {\n        const value = this._panelConfig.getValue('valueLabelType') === 'percentage' ?\n            this.currentProgress :\n            this._currentValue;\n        return value_formatter_1.getFormattedValue(value, this._panelConfig.getValue('prefix'), this._panelConfig.getValue('postfix'), this._panelConfig.getValue('decimals'));\n    }\n    get formattedValue() {\n        const value = this._panelConfig.getValue('valueLabelType') === 'percentage' ?\n            this.aggregatedProgress :\n            this._aggregatedValue;\n        return value_formatter_1.getFormattedValue(value, this._panelConfig.getValue('prefix'), this._panelConfig.getValue('postfix'), this._panelConfig.getValue('decimals'));\n    }\n    get opacity() {\n        return this._panelConfig.getValue('opacity');\n    }\n    get color() {\n        var colorType = this._panelConfig.getValue('coloringType');\n        if (colorType === 'auto') {\n            return 'auto';\n        }\n        if (colorType === 'thresholds') {\n            var thresholdsStr = this._panelConfig.getValue('thresholds');\n            var colors = this._panelConfig.getValue('colors');\n            var value = this.aggregatedProgress;\n            if (thresholdsStr === undefined) {\n                return colors[0];\n            }\n            var thresholds = thresholdsStr.split(',').map(parseFloat);\n            for (var i = thresholds.length; i > 0; i--) {\n                if (value >= thresholds[i - 1]) {\n                    return colors[i];\n                }\n            }\n            return colors[0];\n        }\n        if (colorType === 'key mapping') {\n            var colorKeyMappings = this._panelConfig.getValue('colorKeyMappings');\n            var keyColorMapping = _.find(colorKeyMappings, k => k.key === this._key);\n            if (keyColorMapping === undefined) {\n                return this._panelConfig.getValue('colorsKeyMappingDefault');\n            }\n            return keyColorMapping.color;\n        }\n        throw new Error('Unknown color type ' + colorType);\n    }\n    get titleParams() {\n        const titleType = this._panelConfig.getValue('titleViewType');\n        switch (titleType) {\n            case module_1.TitleViewOptions.SEPARATE_TITLE_LINE:\n                return {\n                    barHeight: 8,\n                    titleTopMargin: 0,\n                    valueTopMargin: -22\n                };\n            case module_1.TitleViewOptions.INLINE:\n                return {\n                    barHeight: 20,\n                    titleTopMargin: -20,\n                    valueTopMargin: -18\n                };\n            default:\n                throw new Error(`Wrong titleType: ${titleType}`);\n        }\n    }\n}\nexports.ProgressItem = ProgressItem;\nclass Mapper {\n    constructor(panelConfig, templateSrv) {\n        this._panelConfig = panelConfig;\n        this._templateSrv = templateSrv;\n    }\n    mapMetricData(seriesList) {\n        const statType = this._panelConfig.getValue('statNameOptionValue');\n        const mappingType = this._panelConfig.getValue('mappingType');\n        const statProgressType = this._panelConfig.getValue('statProgressType');\n        const statProgressMaxValue = this._panelConfig.getValue('statProgressMaxValue');\n        const alias = this._panelConfig.getValue('alias');\n        const nullMapping = this._panelConfig.getValue('nullMapping');\n        if (seriesList === undefined || seriesList.length == 0) {\n            return [];\n        }\n        let kstat = [];\n        let currentStat = [];\n        if (seriesList[0].columns !== undefined) {\n            let keys = seriesList[0].columns.map(col => col.text);\n            const keyColumn = this._panelConfig.getValue('keyColumn');\n            let keyIndex = 0;\n            if (keyColumn !== '') {\n                keyIndex = keys.findIndex(key => key === keyColumn);\n            }\n            const title = keys[keyIndex];\n            let skipIndexes = [keyIndex];\n            const skipColumn = this._panelConfig.getValue('skipColumn');\n            if (skipColumn !== '') {\n                skipIndexes.push(keys.findIndex(key => key === skipColumn));\n            }\n            const maxValue = _.max(seriesList[0].rows.map(row => _.sum(row.filter((value, idx) => !_.includes(skipIndexes, idx)))));\n            const filteredKeys = keys.filter((key, idx) => !_.includes(skipIndexes, idx));\n            return seriesList[0].rows.map(row => new MultiProgressItem(this._panelConfig, row[keyIndex], filteredKeys, row.filter((value, idx) => !_.includes(skipIndexes, idx)), maxValue));\n        }\n        if (mappingType === 'datapoint to datapoint') {\n            if (statType === StatType.TOTAL && seriesList.length == 1) {\n                kstat = this._mapKeysTotal(seriesList);\n            }\n            else {\n                kstat = this._mapNumeric(seriesList, statType, nullMapping);\n            }\n            currentStat = this._mapNumeric(seriesList, StatType.CURRENT, nullMapping);\n        }\n        else {\n            kstat = this._mapTargetToDatapoints(seriesList, statType);\n            currentStat = this._mapTargetToDatapoints(seriesList, StatType.CURRENT);\n        }\n        const maxValue = this._getMaxValue(kstat, statProgressType, statProgressMaxValue);\n        const currentMaxValue = this._getMaxValue(currentStat, statProgressType, statProgressMaxValue);\n        if (alias !== '') {\n            kstat.forEach(k => {\n                const scopedVars = {\n                    __key: { value: k[0] }\n                };\n                k[0] = this._templateSrv.replace(alias, scopedVars);\n            });\n        }\n        return _.map(kstat, (k, idx) => new ProgressItem(this._panelConfig, k[0], k[1], maxValue, currentStat[idx][1], currentMaxValue));\n    }\n    // TODO: enum statProgressType\n    _getMaxValue(kstat, statProgressType, statProgressMaxValue) {\n        if (statProgressType === 'shared') {\n            let total = 0;\n            for (let i = 0; i < kstat.length; i++) {\n                total += kstat[i][1];\n            }\n            return total;\n        }\n        if (statProgressType === 'max value') {\n            let max = -Infinity;\n            if (statProgressMaxValue !== null) {\n                max = statProgressMaxValue;\n            }\n            else {\n                for (let i = 0; i < kstat.length; i++) {\n                    max = Math.max(kstat[i][1], max);\n                }\n            }\n            return max;\n        }\n        return -1;\n    }\n    _mapKeysTotal(seriesList) {\n        if (seriesList.length !== 1) {\n            throw new Error('Expecting list of keys: got more than one timeseries');\n        }\n        var kv = {};\n        var datapointsLength = seriesList[0].datapoints.length;\n        for (let i = 0; i < datapointsLength; i++) {\n            let k = seriesList[0].datapoints[i][0].toString();\n            if (kv[k] === undefined) {\n                kv[k] = 0;\n            }\n            kv[k]++;\n        }\n        var res = [];\n        for (let k in kv) {\n            res.push([k, kv[k]]);\n        }\n        return res;\n    }\n    _mapNumeric(seriesList, statType, nullMapping) {\n        if (seriesList.length != 2) {\n            throw new Error('Expecting timeseries in format (key, value). You can use keys only in total mode');\n        }\n        if (seriesList[0].datapoints.length !== seriesList[1].datapoints.length) {\n            throw new Error('Timeseries has different length');\n        }\n        var kv = {};\n        var datapointsLength = seriesList[0].datapoints.length;\n        for (let i = 0; i < datapointsLength; i++) {\n            let k = seriesList[0].datapoints[i][0].toString();\n            let v = seriesList[1].datapoints[i][0];\n            let vn = parseFloat(v);\n            if (v === null) {\n                if (nullMapping === undefined || nullMapping === null) {\n                    throw new Error('Got null value. You set null value mapping in Options -> Mapping -> Null');\n                }\n                console.log('nullMapping ->' + nullMapping);\n                vn = nullMapping;\n            }\n            if (isNaN(vn)) {\n                throw new Error('Got non-numberic value: ' + v);\n            }\n            if (kv[k] === undefined) {\n                kv[k] = [];\n            }\n            kv[k].push(vn);\n        }\n        var res = [];\n        for (let k in kv) {\n            res.push([k, this._flatSeries(kv[k], statType)]);\n        }\n        return res;\n    }\n    _mapTargetToDatapoints(seriesList, statType) {\n        return seriesList.map(serie => [\n            serie.target,\n            this._flatSeries(serie.datapoints.map(datapoint => datapoint[0]), statType)\n        ]);\n    }\n    _flatSeries(values, statType) {\n        if (values.length === 0) {\n            return 0;\n        }\n        if (statType === StatType.TOTAL) {\n            return _.sum(values);\n        }\n        if (statType === StatType.MAX) {\n            return _.max(values);\n        }\n        if (statType === StatType.MIN) {\n            return _.min(values);\n        }\n        if (statType === StatType.CURRENT) {\n            return _.last(values);\n        }\n        return 0;\n    }\n}\nexports.Mapper = Mapper;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst graph_tooltip_1 = require(\"./graph_tooltip\");\nconst panel_config_1 = require(\"./panel-config\");\nconst mapper_1 = require(\"./mapper\");\nconst sdk_1 = require(\"grafana/app/plugins/sdk\");\nconst _ = require(\"lodash\");\nvar TitleViewOptions;\n(function (TitleViewOptions) {\n    TitleViewOptions[\"SEPARATE_TITLE_LINE\"] = \"Separate title line\";\n    TitleViewOptions[\"INLINE\"] = \"Inline\";\n})(TitleViewOptions = exports.TitleViewOptions || (exports.TitleViewOptions = {}));\n;\nconst ERROR_MAPPING = `\n  Can't map the received metrics, \n  see <strong> <a href=\"https://github.com/CorpGlory/grafana-progress-list/wiki\">wiki</a> </strong>\n`;\nconst ERROR_NO_DATA = \"no data\";\nconst DEFAULTS = {\n    keyColumn: '',\n    // TODO: skip multiple columns\n    skipColumn: '',\n    statNameOptionValue: mapper_1.StatType.CURRENT,\n    statProgressType: 'shared',\n    statProgressMaxValue: null,\n    coloringType: 'auto',\n    titleViewType: TitleViewOptions.SEPARATE_TITLE_LINE,\n    sortingOrder: 'none',\n    valueLabelType: 'percentage',\n    mappingType: 'datapoint to datapoint',\n    alias: '',\n    prefix: '',\n    postfix: '',\n    thresholds: '10, 30',\n    // https://github.com/grafana/grafana/blob/v4.1.1/public/app/plugins/panel/singlestat/module.ts#L57\n    colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n    colorsKeyMappingDefault: 'rgba(245, 54, 54, 0.9)',\n    colorKeyMappings: [],\n    nullMapping: undefined,\n    tooltipMode: graph_tooltip_1.TooltipMode.ALL_SERIES,\n    opacity: 0.5\n};\nclass Ctrl extends sdk_1.MetricsPanelCtrl {\n    constructor($scope, $injector, templateSrv) {\n        super($scope, $injector);\n        this.templateSrv = templateSrv;\n        this.statNameOptions = _.values(mapper_1.StatType);\n        this.statProgressTypeOptions = ['max value', 'shared'];\n        this.coloringTypeOptions = ['auto', 'thresholds', 'key mapping'];\n        this.titleViewTypeOptions = _.values(TitleViewOptions);\n        this.sortingOrderOptions = ['none', 'increasing', 'decreasing'];\n        this.valueLabelTypeOptions = ['absolute', 'percentage'];\n        // TODO: change option names or add a tip in editor\n        this.mappingTypeOptions = ['datapoint to datapoint', 'target to datapoint'];\n        this.tooltipModeOptions = _.values(graph_tooltip_1.TooltipMode);\n        // used to show status messages replacing rendered graphics\n        // see isPanelAlert and panelAlertMessage\n        this._panelAlert = {\n            active: true,\n            // message prop can be formatted with html, \n            message: '<strong>loading...</strong>' // loading will be showed only once at the beginning\n            // would be nice to add `type` property with values ['info', 'warning', 'error']\n            // and then move it https://github.com/chartwerk/grafana-panel-base/issues/1\n        };\n        _.defaults(this.panel, DEFAULTS);\n        this._panelConfig = new panel_config_1.PanelConfig(this.panel);\n        this._initStyles();\n        this.mapper = new mapper_1.Mapper(this._panelConfig, this.templateSrv);\n        this.items = [];\n        this.events.on('init-edit-mode', this._onInitEditMode.bind(this));\n        this.events.on('data-received', this._onDataReceived.bind(this));\n        this.events.on('render', this._onRender.bind(this));\n    }\n    link(scope, element) {\n        this._element = element;\n    }\n    _initStyles() {\n        // small hack to load base styles\n        const cssPath = this._panelConfig.pluginDirName.replace('public/', '');\n        sdk_1.loadPluginCss({\n            light: cssPath + 'css/panel.base.css',\n            dark: cssPath + 'css/panel.base.css'\n        });\n        sdk_1.loadPluginCss({\n            light: cssPath + 'css/panel.light.css',\n            dark: cssPath + 'css/panel.dark.css'\n        });\n    }\n    _onRender() {\n        // maybe we want to make a config \"last value\" instead of ERROR_NO_DATA\n        // see https://github.com/chartwerk/grafana-panel-base/issues/3\n        if (this._seriesList === undefined || this._seriesList.length === 0) {\n            this._panelAlert.active = true;\n            this._panelAlert.message = ERROR_NO_DATA;\n            return;\n        }\n        try {\n            // TODO: set this.items also\n            var items = this.mapper.mapMetricData(this._seriesList);\n        }\n        catch (e) {\n            this._panelAlert.active = true;\n            this._panelAlert.message = ERROR_MAPPING;\n            return;\n        }\n        if (this._panelConfig.getValue('sortingOrder') === 'increasing') {\n            items = _.sortBy(items, i => i.aggregatedProgress);\n        }\n        if (this._panelConfig.getValue('sortingOrder') === 'decreasing') {\n            items = _.sortBy(items, i => -i.aggregatedProgress);\n        }\n        this.$scope.items = items;\n        if (this._tooltip !== undefined) {\n            this._tooltip.destroy();\n        }\n        this._tooltip = new graph_tooltip_1.GraphTooltip(() => this._seriesList, items, this.panel.tooltipMode);\n        this._panelAlert.active = false;\n    }\n    onHover(event, title, value) {\n        // if(title == undefined) {\n        //   title = this.items[index].title;\n        // }\n        // if(value == undefined) {\n        //   value = this.items[index].to;\n        // }\n        this._tooltip.show(event, 'asd', 'asda');\n    }\n    onMouseLeave() {\n        this._tooltip.clear();\n    }\n    _onDataReceived(seriesList) {\n        this._seriesList = seriesList;\n        this.render();\n    }\n    _onInitEditMode() {\n        var thisPartialPath = this._panelConfig.pluginDirName + 'partials/';\n        this.addEditorTab('Options', thisPartialPath + 'options.html', 2);\n    }\n    invertColorOrder() {\n        var tmp = this.panel.colors[0];\n        this.panel.colors[0] = this.panel.colors[2];\n        this.panel.colors[2] = tmp;\n        this.render();\n    }\n    addColorKeyMapping() {\n        this.panel.colorKeyMappings.push({\n            key: 'KEY_NAME',\n            color: 'rgba(50, 172, 45, 0.97)'\n        });\n    }\n    removeColorKeyMapping(index) {\n        this.panel.colorKeyMappings.splice(index, 1);\n        this.render();\n    }\n    _dataError(err) {\n        console.log('got data error');\n        console.log(err);\n        this.$scope.data = [];\n        this.$scope.dataError = err;\n    }\n    get columns() {\n        if (this._seriesList === undefined ||\n            this._seriesList.length === 0 ||\n            this._seriesList[0].columns === undefined) {\n            return [];\n        }\n        return this._seriesList[0].columns.map(col => col.text);\n    }\n    get skipColumns() {\n        return ['', ...this.columns];\n    }\n    get isPanelAlert() {\n        return this._panelAlert.active;\n    }\n    // the field will be rendered as html\n    get panelAlertMessage() {\n        return this._panelAlert.message;\n    }\n}\nCtrl.templateUrl = 'partials/template.html';\nexports.PanelCtrl = Ctrl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PanelConfig {\n    constructor(panel) {\n        this._panel = panel;\n    }\n    getValue(key) {\n        return this._panel[key];\n    }\n    setValue(key, value) {\n        this._panel[key] = value;\n    }\n    get pluginDirName() {\n        if (!this._pluginDirName) {\n            var panels = window['grafanaBootData'].settings.panels;\n            var thisPanel = panels[this._panel.type];\n            // the system loader preprends publib to the url,\n            // add a .. to go back one level\n            this._pluginDirName = thisPanel.baseUrl + '/';\n        }\n        return this._pluginDirName;\n    }\n}\nexports.PanelConfig = PanelConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nfunction getFormattedValue(value, prefix, postfix, decimals) {\n    return `${prefix}${getFormattedFloat(value, decimals)}${postfix}`;\n}\nexports.getFormattedValue = getFormattedValue;\nfunction getFormattedFloat(value, decimals) {\n    let dm = getDecimalsForValue(value, decimals).decimals;\n    if (dm === 0) {\n        return Math.round(value).toString();\n    }\n    let fv = value;\n    for (let i = 0; i < dm; i++) {\n        fv *= 10;\n    }\n    ;\n    let fvs = Math.round(fv).toString();\n    return fvs.substr(0, fvs.length - dm) + '.' + fvs.substr(fvs.length - dm);\n}\nfunction getDecimalsForValue(value, decimals) {\n    // based on https://github.com/grafana/grafana/blob/v4.1.1/public/app/plugins/panel/singlestat/module.ts\n    if (_.isNumber(decimals)) {\n        return {\n            decimals,\n            scaledDecimals: null\n        };\n    }\n    let delta = value / 2;\n    let dec = -Math.floor(Math.log(delta) / Math.LN10);\n    let magn = Math.pow(10, -dec), norm = delta / magn, // norm is between 1.0 and 10.0\n    size;\n    if (norm < 1.5) {\n        size = 1;\n    }\n    else if (norm < 3) {\n        size = 2;\n        // special case for 2.5, requires an extra decimal\n        if (norm > 2.25) {\n            size = 2.5;\n            ++dec;\n        }\n    }\n    else if (norm < 7.5) {\n        size = 5;\n    }\n    else {\n        size = 10;\n    }\n    size *= magn;\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) {\n        dec = 0;\n    }\n    let result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n    return result;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_plugins_sdk__;","module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;"],"sourceRoot":""}